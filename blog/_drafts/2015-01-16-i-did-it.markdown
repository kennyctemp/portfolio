

Okay. I did it. Kind of. Sorta.

Nine weeks after starting Makersquare, minus a two week holiday break, has brought us through the entire modern web software stack. We have covered the following technologies in that time...

1.) Plain vanilla HTML/CSS/JS/Ruby
2.) Javascript libraries like jQuery, Handlebars, and Underscore
3.) AJAX and asynchronus HTTP requests
4.) SQL Databases
5.) Backend frameworks such as Rails and Sinatra, in addition to creating these on our own with raw Ruby.
6.) Creating (or attempting) our own front-end MVC pattern with plain Javascript
7.) Using a front-end MVC framework. In our case, it was Angular.
8.) Version control with Git
9.) Additional data structures such as linked-lists, trees, and tries
10.) Modern design patterns and best practices, such as REST, analyzing algorithms with the Big-O, Model View Controller, Separation of Concerns, and making sure our code is modular.

...and I'm sure there are some more points that I am missing.

Maybe I'm just a bit numb after taking in all of that information in such a short amount of time, but it reinforces the point that taking the time to truly learn something always ends up making it feel much simpler than it ever could have beforehand. To say that I can safely refer to myself as a software engineer after 7 weeks of learning would feel a bit over-zealous at this point, but what I can say is this; I am confident that I can look at almost any web application and break down how it was built and how it functions. However, good thing there is an additional 5 weeks of class left.

One of the most frustrating things about going through an accelerated program such as this, is feeling like you haven't been able to dive as deep into topics as you would ultimately like to.

As confident as I am that I can now go out and build my own full-stack web application (and have been!), our projects have still mostly confined us to working as islands. The exception of this being a hackathon where we worked in small teams, but the concepts of how to work on software in teams in a large organization which resembles a real workplace is something that we have not yet done. Luckily, this is the focus of our final 4 weeks of class. We will be working in a team of 10 to build out a complicated full-stack application. This will require us working with high standards/levels of communication and a lot of practice implementing version control.

If you're reading a blog about software engineering, I can probably assume you're halfway decent at math. So, you may be wondering, "Hey! He said there were 5 weeks of class left, but only the final 4 are for the big final project. What gives?" Well, That is because next week we are going to be starting to learn Node.js, which is something I'm really excited about. I have been excited about Node since I first heard about being able to build full-stack applications in one language, and I did end up playing around with it a bit both before our Makersquare cohort started, and on my nights/weekends during. I will admit that while I was first resistent to learning Ruby and Rails as much as we did, I can honestly say that it was one of the best exercises we did in the entire program. Not because Rails is awesome (it is a great tool), but because it really forced us to be able to pick up new concepts quickly. I think this is going to make learning Node now even more beneficial for us in the long-run. We had to learn back-end functionality in a completely different language than we were used to working in, and now we're going to do that all over again, but now we're going to re-learn back-end functionality in a language that we're not used to building back-end APIs in.

If there is any single thing that I'm taking away from Makersquare, it's that I feel incredibly confident in picking up new skills and concepts. Even if the next 5 weeks fly by without being able to completely shake my 'imposter syndrome' when it comes to software engineering, I can be incredibly confident that those feelings will not cross over into my ability to learn new things quickly and efficiently. That alone makes me believe that I will be able to find a position as a software engineer upon leaving Makersquare.